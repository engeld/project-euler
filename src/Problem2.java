/******************************************************************************
 *  Compilation:  javac Problem2.java
 *  Execution:    java Problem2
 *
 *  Project Euler-Title: Even Fibonacci numbers
 *
 *  Solves Problem #2 from Project Euler, which is:
 *  >  Each new term in the Fibonacci sequence is generated by adding the
 *  >  previous two terms. By starting with 1 and 2, the first 10 terms will be: 
 *  >         1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *  >
 *  >  By considering the terms in the Fibonacci sequence whose values do not
 *  >  exceed four million, find the sum of the even-valued terms.
 *
 ******************************************************************************/

public class Problem2 {

	public static void main(String[] args) {
		int fibonacci_1st = 1;
		int fibonacci_2nd = 2;
		int fibonacci_nr  = 0; 
		int sum_of_even_fibonacci_nrs = 0;

		System.out.println(fibonacci_2nd + " is an even-valued term!");
		sum_of_even_fibonacci_nrs = sum_of_even_fibonacci_nrs + fibonacci_2nd;
				
		for(int i=0; i < 4000000; i++){
			fibonacci_nr = fibonacci_1st + fibonacci_2nd;
			
			if(fibonacci_nr >= 4000000){
				break;	// I know I'm lazy
			}
			
			if(fibonacci_nr % 2 ==0){
				System.out.println(fibonacci_nr + " is an even-valued term!");
				sum_of_even_fibonacci_nrs = sum_of_even_fibonacci_nrs + fibonacci_nr;
			}
			
			fibonacci_1st = fibonacci_2nd;
			fibonacci_2nd = fibonacci_nr;
		}
		
		System.out.println("\n" + sum_of_even_fibonacci_nrs);
	}

}
